"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useSession } from "next-auth/react";
import {
  Calendar,
  ShoppingBag,
  MapPin,
  Plus,
  Minus,
  CalendarDays,
  Building,
  Loader2,
  Heart,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import { Calendar as CalendarComponent } from "@/components/ui/calendar";
import { cn } from "@/lib/utils";
import { toast } from "react-hot-toast";
import dayjs from "dayjs";
import { useCartStore } from "@/store/cartStore";
import { useAppointmentMutations } from "@/hooks/useAppointment";

interface ServiceActionsProps {
  service: {
    _id: string;
    name: string;
    description: string;
    price: number;
    businessId: string;
    businessName?: string;
    serviceType: "appointment" | "product" | "in_person";
    duration?: number;
    availability?: {
      days: string[];
      startTime: string;
      endTime: string;
    };
    inventory?: number;
    customerId?: string;
  };
}

export function ServiceActions({ service }: ServiceActionsProps) {
  const router = useRouter();
  const { data: session } = useSession();
  const [isBookModalOpen, setIsBookModalOpen] = useState(false);
  const [isCartModalOpen, setIsCartModalOpen] = useState(false);
  const [quantity, setQuantity] = useState(1);
  const [selectedDate, setSelectedDate] = useState<Date | undefined>(undefined);
  const [selectedTime, setSelectedTime] = useState<string | undefined>(
    undefined
  );
  const [isFavorite, setIsFavorite] = useState(false);
  
  const toggleFavorite = () => {
    setIsFavorite(!isFavorite);
    if (!isFavorite) {
      toast.success(`Added ${service.name} to favorites`);
    } else {
      toast.success(`Removed ${service.name} from favorites`);
    }
    // TODO: Implement API call to save favorite status
  };
